name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write
  security-events: write
  actions: read
  deployments: write

env:
  REGISTRY: ghcr.io
  # Convert repository name to lowercase for Docker compatibility
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write
      security-events: write
      actions: read
    outputs:
      image_tag: ${{ steps.deployment-tag.outputs.tag }}
      image_digest: ${{ steps.build-image.outputs.digest }}
      environment: ${{ steps.determine-environment.outputs.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        timeout-minutes: 1
        with:
          fetch-depth: 0

      - name: Set Lowercase Image Name
        id: image-name
        timeout-minutes: 1
        run: |
          echo "image_name=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set Up Docker BuildX
        uses: docker/setup-buildx-action@v3
        timeout-minutes: 5
        with:
          # Enable multi-platform builds
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Authenticate To Container Registry
        uses: docker/login-action@v3
        timeout-minutes: 2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata
        id: extract-metadata
        uses: docker/metadata-action@v5
        timeout-minutes: 2
        with:
          images: ${{ env.REGISTRY }}/${{ steps.image-name.outputs.image_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{date 'YYYY.MM.DD'}}-,format=short
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=MicroOcppSimulator
            org.opencontainers.image.description=MicroOcppSimulator

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        timeout-minutes: 15
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.extract-metadata.outputs.tags }}
          labels: ${{ steps.extract-metadata.outputs.labels }}
          cache-from: |
            type=gha
            type=registry,ref=${{ env.REGISTRY }}/${{ steps.image-name.outputs.image_name }}:buildcache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=${{ env.REGISTRY }}/${{ steps.image-name.outputs.image_name }}:buildcache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Clean Up Old Cache
        if: github.event_name != 'pull_request'
        continue-on-error: true
        timeout-minutes: 5
        run: |
          # Clean up old build cache images to prevent registry bloat
          docker buildx imagetools create --dry-run \
            ${{ env.REGISTRY }}/${{ steps.image-name.outputs.image_name }}:buildcache \
            2>/dev/null || echo "No existing cache to clean"